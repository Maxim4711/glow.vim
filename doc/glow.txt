*glow.txt*    Markdown preview with glow                    *glow* *glow.vim*

                                  GLOW.VIM
                    Markdown preview with synchronized scrolling

Author: Maxim4711
License: MIT
Version: 1.0

==============================================================================
CONTENTS                                                        *glow-contents*

    1. Introduction ...................... |glow-introduction|
    2. Installation ...................... |glow-installation|
    3. Commands .......................... |glow-commands|
    4. Configuration ..................... |glow-configuration|
    5. Mappings .......................... |glow-mappings|
    6. Color Rendering ................... |glow-colors|
    7. Troubleshooting ................... |glow-troubleshooting|
    8. Changelog ......................... |glow-changelog|

==============================================================================
1. INTRODUCTION                                             *glow-introduction*

glow.vim is a Vim plugin that provides live Markdown preview using the `glow`
terminal markdown reader. It displays the rendered markdown in a synchronized
vertical split window with beautiful color highlighting.

This plugin is a Vimscript reimplementation of the original concept from
glow.nvim (https://github.com/ellisonleao/glow.nvim), adapted for classic Vim
with enhanced color rendering capabilities.

Requirements:
    - Vim 8.0+ or Neovim
    - glow binary (https://github.com/charmbracelet/glow)
    - `set termguicolors` for color support

Features:
    - Live preview in vertical split
    - Custom ANSI color renderer
    - Synchronized scrolling between source and preview
    - Auto-update on text changes
    - Rich syntax highlighting for all markdown elements
    - Pure Vimscript implementation (no external dependencies)

==============================================================================
2. INSTALLATION                                             *glow-installation*

First, install the glow binary:

macOS (Homebrew): >
    brew install glow
<

Linux: >
    # Arch Linux
    sudo pacman -S glow
    
    # Ubuntu/Debian
    sudo snap install glow
<

Windows:
    Download from: https://github.com/charmbracelet/glow/releases

Then install the plugin using your preferred method:

vim-plug: >
    Plug 'Maxim4711/glow.vim'
<

Vundle: >
    Plugin 'Maxim4711/glow.vim'
<

Manual installation:
    Copy plugin files to your Vim configuration directory.

==============================================================================
3. COMMANDS                                                     *glow-commands*

:GlowToggle                                                      *:GlowToggle*
    Toggle the markdown preview window. If the preview is open, it will be
    closed. If closed, it will be opened with the current buffer content.

:GlowOpen                                                          *:GlowOpen*
    Open the markdown preview window. If already open, this command has no
    effect.

:GlowClose                                                        *:GlowClose*
    Close the markdown preview window. If not open, this command has no
    effect.

:GlowToggleSync                                              *:GlowToggleSync*
    Toggle scroll synchronization between the source buffer and preview
    window. When enabled, the preview will automatically scroll to match
    the relative position of the cursor in the source buffer.

==============================================================================
4. CONFIGURATION                                           *glow-configuration*

                                                          *g:glow_binary_path*
g:glow_binary_path~
    Default: 'glow'
    
    Path to the glow binary. Set this if glow is not in your PATH or if you
    want to use a specific version.
    
    Example: >
        let g:glow_binary_path = '/usr/local/bin/glow'
<

                                                               *g:glow_width*
g:glow_width~
    Default: 80
    
    Width of the rendered markdown in characters. This affects how glow
    formats the output.
    
    Example: >
        let g:glow_width = 100
<

                                                               *g:glow_style*
g:glow_style~
    Default: 'auto'
    
    Color theme for glow rendering. Available options:
    - 'auto': Automatically detect terminal theme
    - 'dark': Dark theme with bright colors
    - 'light': Light theme  
    - 'notty': Plain text without colors
    
    Example: >
        let g:glow_style = 'dark'
<

                                                               *g:glow_pager*
g:glow_pager~
    Default: 0
    
    Enable pager mode in glow. When enabled, glow will display content
    in pager-style format.
    
    Example: >
        let g:glow_pager = 1
<

                                                        *g:glow_sync_scroll*
g:glow_sync_scroll~
    Default: 1
    
    Enable scroll synchronization by default. When enabled, the preview
    window will automatically scroll to match cursor position in source.
    
    Example: >
        let g:glow_sync_scroll = 0
<

                                                         *g:glow_use_colors*
g:glow_use_colors~
    Default: 0
    
    Enable colored output from glow. When enabled, glow will generate ANSI
    color sequences that can be rendered by the custom ANSI renderer.
    
    Example: >
        let g:glow_use_colors = 1
<

                                                      *g:glow_render_colors*
g:glow_render_colors~
    Default: 0
    
    Enable color rendering in Vim buffers using the built-in ANSI renderer.
    When enabled, parses ANSI escape sequences from glow and applies them
    as Vim highlighting groups. Requires termguicolors and g:glow_use_colors.
    
    Example: >
        set termguicolors
        let g:glow_use_colors = 1
        let g:glow_render_colors = 1
<

                                         *g:glow_disable_default_mappings*
g:glow_disable_default_mappings~
    Default: 0
    
    Disable the default key mappings. Set this to 1 if you want to define
    your own mappings.
    
    Example: >
        let g:glow_disable_default_mappings = 1
<

==============================================================================
5. MAPPINGS                                                     *glow-mappings*

Default mappings (when g:glow_disable_default_mappings is not set):

<Leader>p                                                       *glow-<Leader>p*
    Toggle the markdown preview window. Equivalent to :GlowToggle.

<Leader>P                                                       *glow-<Leader>P*
    Toggle scroll synchronization. Equivalent to :GlowToggleSync.

Custom mappings example: >
    " Disable default mappings
    let g:glow_disable_default_mappings = 1
    
    " Create custom mappings
    nnoremap <silent> <F5> :GlowToggle<CR>
    nnoremap <silent> <F6> :GlowToggleSync<CR>
<

==============================================================================
6. COLOR RENDERING                                               *glow-colors*

glow.vim features a custom ANSI renderer built in pure Vimscript that provides
rich color highlighting for markdown elements without external dependencies.

Color Scheme:                                             *glow-color-scheme*

The renderer applies different colors to markdown elements:

    Headers (#, ##, ###)     → Bright red/pink with bold formatting
    Bold text (**text**)     → Bright green with bold formatting
    Italic text (*text*)     → Light blue with italic formatting  
    Code blocks (`code`)     → Yellow highlighting
    Links ([text](url))      → Purple with underline

Configuration:                                          *glow-color-configuration*

To enable color rendering: >
    set termguicolors
    let g:glow_use_colors = 1
    let g:glow_render_colors = 1
<

The color renderer:
    - Parses glow's ANSI sequences in real-time
    - Maps formatting to appropriate Vim highlight groups
    - Handles complex sequences like ;;1m that other tools struggle with
    - Provides consistent colors across different terminals and colorschemes

Performance:                                              *glow-color-performance*

The ANSI renderer is optimized for performance:
    - Only processes visible content
    - Uses efficient Vim highlighting APIs
    - No external command execution
    - Minimal memory overhead

==============================================================================
7. TROUBLESHOOTING                                         *glow-troubleshooting*

Problem: "Glow binary not found" error
Solution: Install glow or set the correct path: >
    let g:glow_binary_path = '/path/to/glow'
<

Problem: No colors in preview
Solution: Enable termguicolors and color rendering: >
    set termguicolors
    let g:glow_use_colors = 1
    let g:glow_render_colors = 1
<

Problem: Preview not updating automatically
Solution: 
    - Ensure you're editing a .md file
    - Check glow is executable: :!which glow
    - Try manual refresh: :GlowClose then :GlowOpen

Problem: Scroll synchronization not working
Solution:
    - Check both windows are visible
    - Toggle sync: :GlowToggleSync (twice to reset)
    - Verify g:glow_sync_scroll is set to 1

Problem: Colors look wrong or inconsistent
Solution:
    - Verify termguicolors is enabled: :set termguicolors?
    - Check your colorscheme compatibility
    - Try different glow styles: let g:glow_style = 'dark'

Problem: Performance issues with large files
Solution:
    - Disable color rendering for large files: let g:glow_render_colors = 0
    - Use plain glow output: let g:glow_use_colors = 0
    - Reduce preview width: let g:glow_width = 60

==============================================================================
8. CHANGELOG                                                   *glow-changelog*

1.0 (2025-05-31)
    - Initial release
    - Vertical split preview with glow
    - Custom ANSI color renderer
    - Synchronized scrolling
    - Auto-update on changes
    - Complete Vimscript implementation
    - Rich color highlighting for all markdown elements
    - Pure Vim solution with no external dependencies

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
